[General]


##########################################################################
# simulation general settings
##########################################################################

network 		= artery.inet.World
num-rngs 		= 10
#seed-0-mt 		= 532569 # 32-bit
seed-0-mt 		= ${seed = 532569}
debug-on-errors 	= false
print-undisposed 	= false
**.annotations.draw 	= false
**.debug 		= false
**.coreDebug 		= false
record-eventlog 	= false


##########################################################################
# run environment settings
##########################################################################

# if build.system 	= ARTERY_GUIenv, file: 'run_ARTERY_guienv_from_sublime.cmd'
# if build.system 	= ARTERY_cmdenv, file: 'run_ARTERY_cmdenv_from_sublime.cmd'
**.cmdenv-log-level 	= off
cmdenv-express-mode 	= true
cmdenv-autoflush 	= true
cmdenv-status-frequency = 25s


##########################################################################
# SUMO settings
##########################################################################

*.traci.core.version 		= -1
*.traci.launcher.typename 	= "PosixLauncher"
*.traci.mapper.rng-0 		= 1
*.traci.core.selfStopping 	= false	


##########################################################################
# NODES settings, NIC, MAC, PHY, APP
##########################################################################

# energyDetection (eD) --> for CCA, default value in standard <-82,-62> dBm
# if radio's sensitivity (sensi) is better than eD --> eD = sensi
# for Cohda MK5 radios --> CohdaMobility MK5 Module Datasheet
# antenna.gain as default because huge manufacturer variability

*.node[*].wlan[*].typename 	= "VanetNic"
*.node[*].wlan[*].radioType 	= "Ieee80211ScalarRadio"
*.node[*].wlan[*].macType 	= "Ieee80211Mac"
*.node[*].wlan[*].mgmtType 	= "Ieee80211MgmtAdhoc"
*.node[*].wlan[*].opMode 	= "p"
*.node[*].wlan[*].bitrate 	= 6 Mbps

*.node[*].wlan[*].radio.displayCommunicationRange 	= true
*.node[*].wlan[*].radio.displayInterferenceRange 	= true
*.node[*].wlan[*].radio.receiver.ignoreInterference 	= false
*.node[*].wlan[*].radio.bandName 			= "5 GHz"
*.node[*].wlan[*].radio.bandwidth 			= 10 MHz
*.node[*].wlan[*].radio.channelNumber 			= 180
*.node[*].wlan[*].radio.carrierFrequency 		= 5.9 GHz
*.node[*].wlan[*].radio.transmitter.power 		= 200 mW
*.node[*].wlan[*].radio.transmitter.bitrate 	 	= 6 Mbps
*.node[*].wlan[*].radio.receiver.sensitivity 	 	= ${sensi = -93} dBm
#*.node[*].wlan[*].radio.receiver.sensitivity 	 	= ${sensi = -109} dBm
*.node[*].wlan[*].radio.receiver.energyDetection 	= ${sensi} dBm
*.node[*].wlan[*].radio.receiver.snirThreshold 		= 3 dB
#*.node[*].wlan[*].radio.receiver.snirThreshold 		= 0 dB

*.node[*].wlan[*].mac.rateSelection.modeSet 		= "p"
*.node[*].wlan[*].mac.rateSelection.dataBitrate 	= 6 Mbps
*.node[*].wlan[*].mac.rateSelection.multicastBitrate 	= 6 Mbps

# Definition of Statistical Region
*.node[*].wlan[*].mac.rx.statRegionHighwayStart 	= 300
*.node[*].wlan[*].mac.rx.statRegionHighwayEnd 		= 700
*.node[*].wlan[*].mac.rx.statRegionGridStartX 		= 70 
*.node[*].wlan[*].mac.rx.statRegionGridEndX 		= 375
*.node[*].wlan[*].mac.rx.statRegionGridStartY 		= 111.25
*.node[*].wlan[*].mac.rx.statRegionGridEndY 		= 333.75

*.node[*].middleware.updateInterval 			= 0.1 s
*.node[*].middleware.my_jitter				= 0.5s
*.node[*].middleware.datetime 				= "2017-06-01 12:35:00"
**.assumeNonUrbanEnvironment 				= true

##########################################################################
# MEDIUM settings (./extern/inet/src/inet/physicallayer/)
##########################################################################

World.radioMedium.obstacleLossType 		= ""
World.radioMedium.propagationType 		= "ConstantTimePropagation"	 		
World.radioMedium.analogModelType 		= "ScalarAnalogModel"		 		
World.radioMedium.backgroundNoiseType 		= "IsotropicScalarBackgroundNoise"
World.radioMedium.backgroundNoise.power		= -110 dBm
World.radioMedium.pathLossType			= "RayleighFading"
World.radioMedium.pathLoss.alpha 		= 3  

# "obstacleloss" folder: DielectricObstacleLoss, IdealObstacleloss
# "propagation"  folder: ConstantSpeedPropagation, ConstantTimePropagation
# "analogmodel"  folder: ScalarAnalogModel, dimensionalAnalogModel
# "pathloss"     folder: TwoRayGroundReflection, TwoRayInterference
#                        FreeSpacePathLoss, RayleighFading, RicianFading, 
#                        LogNormalShadowing, NakagamiFading
# typical alpha  values: freespace 2, urban 2.5-3.5, shadowed urban 3-5, 
#                        inbuilding LoS 1.7, inbuilding nLos 4-6
# value of alpha affects both BLUE and GREY circles

# if obstacleLossType <> ""
World.physicalEnvironment.config 		= xmldoc("my_roads/walls.xml") 
World.physicalEnvironment.groundType 		= "FlatGround"
World.physicalEnvironment.ground.elevation 	= 0 m


##########################################################################
# SCENARIOS settings
##########################################################################

repeat	= 1	# change rng, affects num of runs (-r)
# from Cohda MK5 DS --> The packet error rate (PER)
# is less than 10% at a PSDU length of 1,000 octets for these input levels


##########################################################################
# statistics settings
##########################################################################

*.SystemMonitor.outputFileName 	= "${resultdir}/${experiment}/${measurement}-${repetition}-${sensi}-${seed}"
*.SystemMonitor.warmupTime 	= ${warmupTime}

output-scalar-file 		= ${resultdir}/${experiment}/${measurement}-${repetition}-${sensi}.sca
output-vector-file 		= ${resultdir}/${experiment}/${measurement}-${repetition}-${sensi}.vec
**.param-record-as-scalar 	= false
**.scalar-recording 		= true
**.vector-recording 		= false 


# ==========================================================
# scenario GRID
# ==========================================================
[Config grid]
#	sim-time-limit 					= 16 s
#	sim-time-limit 					= 200 s
	sim-time-limit 					= 7 s
#	warmup-period					= ${warmupTime = 1}s
#	warmup-period					= ${warmupTime = 100}s 
	warmup-period					= ${warmupTime = 4}s
#	*.traci.launcher.sumo 				= "sumo-gui --max-num-vehicles 2"
	*.traci.launcher.sumo 				= "sumo-gui"
	*.node[*].middleware.services 			= xmldoc("services_CA.xml")
	**.globalListener.**.vector-recording 		= true
	**.globalMapper.**.vector-recording 		= true
	*.node[*].**.vector-recording 			= true
#	*.node[5].**.vector-recording 			= true
#	*.node[8].**.vector-recording 			= true
#	*.node[13..16].**.vector-recording 		= true
	experiment-label 				= ${configname}


	# ------------------------------------------
	# num. vehicles effect, w/ or w/o buildings
	# ------------------------------------------
	[Config grid-traffic_fluid-period]
		extends 				= grid
		measurement-label 			= fluid-${iterationvars}
#		**.cam_msg_period 			= ${period = 1000, 200, 100}
		**.cam_msg_period 			= ${period = 100}
		*.traci.launcher.sumocfg 		= "my_roads/custom/two-way/16_lanes/single_road_16lanes.sumo.cfg"
#		*.traci.launcher.sumocfg 		= "my_roads/grid_traffic_fluid/my_grid.sumo.cfg"
#		*.traci.launcher.sumo 			= "sumo-gui --max-num-vehicles 2"

	[Config grid-traffic_dense-period]
		extends 				= grid
		measurement-label 			= dense-${iterationvars}
		**.cam_msg_period 			= ${period = 500, 200}
		*.traci.launcher.sumocfg 		= "my_roads/grid_traffic_dense/my_grid.sumo.cfg"

	[Config grid-traffic_fluid-period-buildings]
		extends 				= grid-traffic_fluid-period
		World.radioMedium.obstacleLossType 	= "DielectricObstacleLoss"
		#World.radioMedium.obstacleLossType 	= "IdealObstacleLoss"

	[Config grid-traffic_dense-period-buildings]
		extends 				= grid-traffic_dense-period
		World.radioMedium.obstacleLossType 	= "DielectricObstacleLoss"

	[Config grid-traffic_fluid-period-buildings-limited]
		extends 				= grid-traffic_fluid-period-buildings
		*.traci.launcher.sumo 			= "sumo-gui --max-num-vehicles 233"

	[Config grid-traffic_dense-period-buildings-limited]
		extends 				= grid-traffic_dense-period-buildings
		*.traci.launcher.sumo 			= "sumo-gui --max-num-vehicles 700"

	[Config easy-grid-traffic_fluid-period-buildings-limited]
		extends 				= grid-traffic_fluid-period-buildings-limited
		measurement-label 			= easy-fluid-${iterationvars}
		World.radioMedium.obstacleLossType 	= ""
		**.cam_msg_period 			= 500


	# ---------------------------------------
	# error when tx'ing effect
	# ---------------------------------------
	[Config grid-traffic_fluid-error]
		extends 				= grid-traffic_fluid-period
		measurement-label 			= error-${iterationvars}
		**.cam_msg_period 			= 500
		**.par_my_error_rate 			= ${error = 0.3}
		*.traci.launcher.sumocfg 		= "my_roads/grid_traffic_fluid/my_grid.sumo.cfg"


# ==========================================================
# scenario RONDA-emergency, limited num vehicles
# ==========================================================
[Config ronda-emergency]
	experiment-label        			= ${configname}
	measurement-label 				= emergency-${iterationvars}
	sim-time-limit 		    			= 550s
	warmup-period					= 140s
	*.traci.launcher.sumo 				= "sumo-gui --max-num-vehicles 150"
	**.cam_msg_period 				= 1000
	*.node[*].middleware.services 			= xmldoc("services_DEMY.xml")
	*.traci.launcher.sumocfg  			= "my_roads/ronda-emergency/ronda.sumo.cfg"
	**.globalListener.**.vector-recording 		= true
	**.globalMapper.**.vector-recording 		= true
	*.node[5].**.vector-recording 			= true # rsu
	*.node[10].**.vector-recording 			= true # rsu
	*.node[15].**.vector-recording 			= true # rsu
	*.node[20].**.vector-recording 			= true # rsu
	*.node[25].**.vector-recording 			= true # rsu
	*.node[50].**.vector-recording 			= true
	*.node[70..80].**.scalar-recording 		= true
	*.node[70..80].**.vector-recording 		= true
	**.par_is_there_emergency 			= ${siren=false,true}



# ==========================================================
# scenario RONDA speed 
# ==========================================================
[Config ronda-speed]
	experiment-label        			= ${configname}
	measurement-label 				= speed-${runnumber}
	sim-time-limit 		    			= 3600s	
	*.traci.launcher.sumo 				= "sumo-gui"
	**.cam_msg_period 				= 100
	*.node[*].middleware.services 			= xmldoc("services_CA.xml")
	**.globalListener.**.vector-recording 		= true
	**.globalMapper.**.vector-recording 		= true
	*.node[5].**.vector-recording 			= true # rsu
	*.node[10].**.vector-recording 			= true # rsu
	*.node[15].**.vector-recording 			= true # rsu
	*.node[20].**.vector-recording 			= true # rsu
	*.node[25].**.vector-recording 			= true # rsu
	*.node[30].**.vector-recording 			= true
	*.node[50..75].**.vector-recording 		= true
	**.par_is_there_speed 				= true
	*.traci.launcher.sumocfg  			= ${speed = "my_roads/ronda-speed-10/ronda.sumo.cfg", \
														"my_roads/ronda-speed-20/ronda.sumo.cfg", \
														"my_roads/ronda-speed-30/ronda.sumo.cfg", \
														"my_roads/ronda-speed-40/ronda.sumo.cfg"  }



# ==========================================================
# scenario RONDA group 
# ==========================================================
[Config ronda-group]
	experiment-label        			= ${configname}
	measurement-label 				= group-${runnumber}
	sim-time-limit 		    			= 1340s	
	*.traci.launcher.sumo 				= "sumo-gui"
	**.cam_msg_period 				= 100
	*.node[*].middleware.services 			= xmldoc("services_CA.xml")
	**.globalListener.**.vector-recording 		= true
	**.globalMapper.**.vector-recording 		= true
	*.node[5].**.vector-recording 			= true # rsu
	*.node[10].**.vector-recording 			= true # rsu
	*.node[15].**.vector-recording 			= true # rsu
	*.node[20].**.vector-recording 			= true # rsu
	*.node[25].**.vector-recording 			= true # rsu
	*.node[26..].**.vector-recording 		= true # all cars
	*.traci.launcher.sumocfg  			= ${speed = "my_roads/ronda-group-10/ronda.sumo.cfg", \
														"my_roads/ronda-group-20/ronda.sumo.cfg", \
														"my_roads/ronda-group-30/ronda.sumo.cfg", \
														"my_roads/ronda-group-40/ronda.sumo.cfg"  }


# ==========================================================
# scenario SINGLE
# ==========================================================
[Config single]
	extends 					= grid-traffic_fluid-period
	measurement-label 				= single-${iterationvars}
	sim-time-limit 	         			= 100s
	warmup-period			 		= 50s
	*.traci.launcher.sumo 	 			= "sumo-gui"




